package com.doctor.assistant.calculatecell.controller;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import com.doctor.assistant.calculatecell.entity.EvalKpiSimValue;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.time.LocalDateTime;import java.time.ZoneOffset;@RestController@RequestMapping("/calculate")public class CalculateController {    private static final Logger logger = LoggerFactory.getLogger(CalculateController.class);    @RequestMapping("/inputJson/{calculateInputJson}")    public String calculateInputJson(@PathVariable String calculateInputJson){        logger.info("运算中心：算子，接到调用" + this.getClass().getName() + " is called." + "receive : " + calculateInputJson);        JSONObject jsonObject = JSON.parseObject(calculateInputJson);        Integer kpiId = (Integer)jsonObject.get("kpiId");        EvalKpiSimValue eksv = new EvalKpiSimValue();        eksv.setInputBatch(1);        eksv.setKpiId(kpiId);        eksv.setValue(0.97f);        eksv.setProductId(kpiId);        eksv.setSimTimeFromTo(new Double(kpiId));        eksv.setTimeStamp(String.valueOf(LocalDateTime.now().toEpochSecond(ZoneOffset.of("+8"))));        eksv.setManufactoryName("manufactoryName-" + kpiId);        eksv.setShopName("shopName-test"+kpiId);        eksv.setStoreName("storeName-test"+kpiId);        return JSONObject.toJSONString(eksv);    }}