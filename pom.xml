<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <modules>
        <module>makeJar</module>
        <module>image-recognition</module>
        <module>activiti-server</module>
        <module>user-server</module>
        <module>config-server</module>
        <module>common-server</module>
    </modules>
    <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.10.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.doctor.assistant</groupId>
	<artifactId>PlatFormRoot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>PlatFormRoot</name>
	<description>医助平台</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<druid.version>1.1.9</druid.version>
		<fastjson-lib.version>1.2.25.sec10</fastjson-lib.version>
		<user-server.version>0.0.4-SNAPSHOT</user-server.version>
		<common-server.version>0.0.1-SNAPSHOT</common-server.version>
	</properties>

	<!-- 设定主仓库，按设定顺序进行查找  -->
	<repositories>
		<repository>
			<id>aliyun</id>
			<name>aliyun Repository</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>alfresco</id>
			<name>Activiti Releases</name>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/activiti-releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>jeecg-snapshots</id>
			<name>jeecg-snapshots Repository</name>
			<url>http://maven.jeecg.org/nexus/content/repositories/snapshots</url>
		</repository>
	</repositories>

	<!--
	· dependencies即使在子项目中不写该依赖项，那么子项目仍然会从父项目中继承该依赖项（全部继承）
	· dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。
		如果不在子项目中声明依赖，是不会从父项目中继承下来的；只有在子项目中写了该依赖项，并且没有指定具体版本，
		才会从父项目中继承该项，并且version和scope都读取自父pom;
		另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本。
	-->
	<dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-dependencies</artifactId>
					<version>${spring-cloud.version}</version>
					<scope>import</scope>
					<type>pom</type>
				</dependency>
				<!-- druid连接池  -->
				<dependency>
					<groupId>com.alibaba</groupId>
					<artifactId>druid</artifactId>
					<version>${druid.version}</version>
					<!--<scope>runtime</scope>-->
				</dependency>
				<dependency>
					<groupId>org.mybatis.spring.boot</groupId>
					<artifactId>mybatis-spring-boot-starter</artifactId>
					<version>2.1.3</version>
				</dependency>
				<dependency>
					<groupId>org.redisson</groupId>
					<artifactId>redisson</artifactId>
					<version>2.5.1</version>
				</dependency>
				<dependency>
					<groupId>javax.servlet.jsp</groupId>
					<artifactId>javax.servlet.jsp-api</artifactId>
					<version>2.3.1</version>
				</dependency>

				<dependency>
					<groupId>com.alibaba</groupId>
					<artifactId>fastjson</artifactId>
					<version>${fastjson-lib.version}</version>
				</dependency>

				<!-- 子项目引用 -->
				<dependency>
					<groupId>com.doctor.assistant</groupId>
					<artifactId>user-server</artifactId>
					<version>${user-server.version}</version>
				</dependency>
				<dependency>
					<groupId>com.doctor.assistant</groupId>
					<artifactId>common-server</artifactId>
					<version>${common-server.version}</version>
				</dependency>

<!--				<dependency>-->
<!--					<groupId>org.springframework.boot</groupId>-->
<!--					<artifactId>spring-boot-starter-tomcat</artifactId>-->
<!--					<scope>provided</scope>-->
<!--				</dependency>-->
			</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--devtools热部署-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
